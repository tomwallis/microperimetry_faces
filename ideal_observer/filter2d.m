function thefilter=filter2d(lowf,highf,orient1,orient2,dim);%% function thefilter=filter2d(lowf,highf,orient1,orient2,dim)%% Constructs a 2D ideal, bandpass filter.% parameters:% 	>> lowf, highf: only spatial frequencies between lowf & highf are passed by the filter. If either lowf%	   or highf is empty ([ ]) or NaN, then all frequencies are passed.% 	>> orient1, orient2:  only orientations between orient1 & orient2 are passed by the filter; If either%	   orient1 or orient2 is empty ([ ]) or NaN, then all orientations are passed.%	   (horizontal = 0 deg; vertical = 90 deg)%	>> dim: dimension of matrix (must be greater than zero).%% Only spatial frequencies between lowf and highf and orientations between% orient1 and orient2 are passed by the filter.% The filter is returned is returned in "frequency space" format: it is a% binary, dim x dim matrix that contains a 1 at all frequencies that fall% within the filter's pass-band and zeros everywhere else. You filter an image% by computing the Fourier transform of I and then multiplying the amplitude spectrum% by thefilter. The function "bandpass" uses this technique to bandpass filter an image.% % SEE BPIMAGE for an example of how thefilter can be used to filter an image.%if (nargin<5)	disp('ERROR IN fitler2d: 5 input parameters are required.');	thefilter=NaN;	return;end;if (dim<1)	disp('ERROR IN fitler2d: dimension must be greater than zero.');	thefilter=NaN;	return;end;thefilter=bpfilter(lowf,highf,dim);temp=ofilter(orient1,orient2,dim);thefilter=thefilter.*temp;return;